[include mainsail.cfg]
[include klicky-probe.cfg]
[include KAMP_Settings.cfg]
[include stealthburner_leds.cfg]
[include TheFilter.cfg]


[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100



[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32h743xx_280028000651323439333335-if00
restart_method: command
##--------------------------------------------------------------------

[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_4E363334320B5DDD-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[autotune_tmc stepper_x]
motor: ldo-42sth48-2004mah
[autotune_tmc stepper_y]
motor: ldo-42sth48-2004mah
##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PC1
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 40   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
# diag0_pin: ^!PG1
interpolate: TRUE
run_current: 0.8
sense_resistor: 0.075

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PC2
position_min: 0
position_endstop: 307
position_max: 308
homing_speed: 40  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
# diag0_pin: ^!PE10
interpolate: TRUE
run_current: 0.8
sense_resistor: 0.075

 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD7
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4 
microsteps: 32
endstop_pin: PC3
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 280
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: PC8
enable_pin: !PC10
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to STEPPER 0
##  Heater - HEATER
##  Thermistor - TH0
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:gpio9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: pt1000
sensor_pin: nhk:gpio29
pullup_resistor: 2200
min_temp: 10
max_temp: 350
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.035
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 9
max_extrude_only_distance: 150

##  E0 on MOTOR6
##  Connected to STEPPER 4
[tmc2209 extruder]
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false
run_current: 0.5
sense_resistor: 0.100
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.8
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  Connected to Z-PROBE
##  This probe is not used for Z height, only Quad Gantry Leveling
pin: ^nhk:gpio10
x_offset: 0
y_offset: 19.75
#z_offset: 6.42
speed: 5
samples:3 
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: nhk:gpio6
#tachometer_pin: nhk:gpio17
#tachometer_ppr: 2
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: nhk:gpio5
#tachometer_pin: nhk:gpio16
#tachometer_ppr: 2
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan-LEFT]
##  Controller fan - FAN2
pin: PF7
##tachometer_pin: PF6
kick_start_time: 0.5
hardware_pwm:TRUE
fan_speed: 0.8
heater: heater_bed

[controller_fan controller_fan-RIGHT]
##  Controller fan - FAN2
pin: PB3
##tachometer_pin: PF6
kick_start_time: 0.5
hardware_pwm:TRUE
fan_speed: 0.8
heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PF9
#tachometer_pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   Filament sensor
#####################################################################

#[filament_switch_sensor Filament]
#pause_on_runout: True
#runout_gcode: M600
#insert_gcode:
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: !PC0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
[output_pin caselight]
pin: PE6
pwm:true
hardware_pwm: False
value: 0.20 #startup value
shutdown_value: 0
#value:1
cycle_time: 0.00025

## Neopixel (nitehawk sb)
## Connected to led (nitehawk sb)
[output_pin pcb_led]
pin: !nhk:gpio8

## Neopixel (nitehawk sb)
## Connected to NEOPIXEL (nitehawk sb)
[neopixel rgb_light]
pin: PF10
chain_count: 36
color_order: BGR
initial_RED: 0.2
initial_GREEN: 0.2
initial_BLUE: 0.2


#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio21
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20


#####################################################################
#   TH
# #####################################################################
[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio28
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor nh_temp]
## Nitehawk PCB Sensor
sensor_type: CMFB103F3950FANT
sensor_pin: nhk:gpio26
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: nh_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:173,305
# speed:100
# z_hop:10

[z_tilt]
z_positions:
  -50, 18
  150, 348
  350, 18
points:
  30, 5
  150, 245
  270, 5

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG9, EXP1_2=PG12,
    EXP1_3=PG13, EXP1_4=PG14,
    EXP1_5=PC13, EXP1_6=PC14,    # Slot in the socket on this side
    EXP1_7=PC15, EXP1_8=PF0,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE2, EXP2_4=PE4,
    EXP2_5=PE3, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PE5, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PE4

#####################################################################

#####################################################################
#   Macros
#####################################################################

[gcode_macro COLD_PULL]
description: Performs a cold pull to clean the nozzle on a Voron Trident
gcode:
    {% set filament_type = params.FILAMENT|default('PLA')|string %}
    {% set target_temp = params.TEMP|default(85 if filament_type == 'PLA' else 130)|float %}
    {% set cool_temp = params.COOL_TEMP|default(60)|float %}
    {% set extrude_length = params.EXTRUDE|default(10)|float %}
    {% set retract_length = params.RETRACT|default(50)|float %}
    {% set retract_speed = params.SPEED|default(1000)|float %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # Save current state
    SAVE_GCODE_STATE NAME=cold_pull_state

    # Display message
    M117 Starting Cold Pull for {filament_type}
    SET_DISPLAY_TEXT MSG="Starting Cold Pull for {filament_type}"

    # Home the printer and level bed
    G28  ; Home all axes
    Z_TILT_ADJUST  ; Level the bed using Trident's 3-motor Z-tilt
    G28 Z  ; Re-home Z after leveling

    # Move to safe position
    G90  ; Absolute positioning
    G1 X{x_wait} Y{y_wait} Z50 F9000  ; Move to center of bed, 50mm above

    # Enable cold extrusion
    M302 S0  ; Allow cold extrusion

    # Heat extruder to target temperature
    M109 S{target_temp}  ; Set and wait for extruder to reach target temp
    SET_DISPLAY_TEXT MSG="Heating to {target_temp}°C"

    # Extrude a small amount to ensure filament is in nozzle
    G91  ; Relative positioning
    G1 E{extrude_length} F300  ; Extrude filament slowly
    G90  ; Absolute positioning

    # Cool down to a lower temperature for pulling
    M106 S255  ; Turn on part cooling fan to speed up cooling
    M104 S{cool_temp}  ; Set extruder to cooling temp
    SET_DISPLAY_TEXT MSG="Cooling to {cool_temp}°C"
    M109 S{cool_temp}  ; Wait for extruder to reach cooling temp
    M106 S0  ; Turn off part cooling fan

    # Retract filament to perform cold pull
    G91  ; Relative positioning
    G1 E-{retract_length} F{retract_speed}  ; Retract filament
    G90  ; Absolute positioning

    # Notify user to remove filament manually if needed
    M117 Cold Pull complete. Remove filament manually if necessary.
    SET_DISPLAY_TEXT MSG="Cold Pull complete. Remove filament if needed."
    M300 S1000 P500  ; Beep to alert user (if supported)

    # Disable cold extrusion
    M302 S170  ; Restore default minimum extrusion temp (adjust as needed)

    # Restore state
    RESTORE_GCODE_STATE NAME=cold_pull_state

[bed_mesh]
horizontal_move_z: 10
mesh_min:50,50
mesh_max:250,250


[gcode_macro LOAD_FILAMENT]
description: Load filament into extruder with LED feedback
gcode:
    {% set extruder_temp = params.TEMP|default(200)|int %}
    {% set x_park = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float / 2 %}

    SAVE_GCODE_STATE NAME=LOAD_STATE
    SET_DISPLAY_TEXT MSG="Loading filament"
    STATUS_HEATING            # Set sb_leds to heating
    SET_LED LED=rgb_light RED=1 GREEN=1 BLUE=0  # Set rgb_light to yellow
    G90                       # Absolute positioning
    G0 X{x_park} Y{y_park} Z50 F9000  # Move to center, Z50
    M109 S{extruder_temp}     # Heat extruder
    G1 E50 F300               # Extrude 50mm filament
    G1 E10 F100               # Extrude 10mm slowly
    M400                      # Wait for moves
    SET_DISPLAY_TEXT MSG="Filament loaded"
    STATUS_READY              # Set sb_leds to ready
    SET_LED LED=rgb_light RED=0 GREEN=1 BLUE=0  # Set rgb_light to green
    RESTORE_GCODE_STATE NAME=LOAD_STATE

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from extruder with LED feedback
gcode:
    {% set extruder_temp = params.TEMP|default(200)|int %}
    {% set x_park = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float / 2 %}

    SAVE_GCODE_STATE NAME=UNLOAD_STATE
    SET_DISPLAY_TEXT MSG="Unloading filament"
    STATUS_HEATING            # Set sb_leds to heating
    SET_LED LED=rgb_light RED=1 GREEN=1 BLUE=0  # Set rgb_light to yellow
    G90                       # Absolute positioning
    G0 X{x_park} Y{y_park} Z50 F9000  # Move to center, Z50
    M109 S{extruder_temp}     # Heat extruder
    G1 E-70 F300              # Retract 70mm filament
    G1 E-10 F100              # Retract 10mm slowly
    M400                      # Wait for moves
    SET_DISPLAY_TEXT MSG="Filament unloaded"
    STATUS_READY              # Set sb_leds to ready
    SET_LED LED=rgb_light RED=0 GREEN=1 BLUE=0  # Set rgb_light to green
    RESTORE_GCODE_STATE NAME=UNLOAD_STATE

[gcode_macro CHAMBER_PREHEAT]
description: Preheat chamber to target temperature with LED feedback
gcode:
    {% set target_chamber = params.TEMP|default(40)|int %}
    {% set bed_temp = params.BED|default(target_chamber + 10)|int %}
    {% set x_park = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float / 2 %}

    SAVE_GCODE_STATE NAME=CHAMBER_PREHEAT_STATE
    SET_DISPLAY_TEXT MSG="Preheating chamber to {target_chamber}C"
    STATUS_HEATING                # Set sb_leds to heating mode
    SET_LED LED=rgb_light RED=0.5 GREEN=0 BLUE=0.5  # Set rgb_light to purple
    G90                           # Absolute positioning
    G0 X{x_park} Y{y_park} Z50 F9000  # Park toolhead at center, Z50

    # Heat bed to assist chamber heating
    M140 S{bed_temp}              # Set bed temperature
    M190 S{bed_temp}              # Wait for bed to reach temperature

    # Wait for chamber temperature (if sensor exists)
    {% if printer["temperature_sensor chamber"] is defined %}
        SET_DISPLAY_TEXT MSG="Waiting for chamber to reach {target_chamber}C"
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}
    {% else %}
        SET_DISPLAY_TEXT MSG="No chamber sensor, waiting 10 minutes"
        G4 P600000                # Wait 10 minutes for passive chamber heating
    {% endif %}

    # Finalize
    SET_DISPLAY_TEXT MSG="Chamber preheated"
    STATUS_READY                  # Set sb_leds to ready mode
    SET_LED LED=rgb_light RED=0 GREEN=1 BLUE=0  # Set rgb_light to green
    RESTORE_GCODE_STATE NAME=CHAMBER_PREHEAT_STATE

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    Z_TILT_ADJUST
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    #  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
description: Start macro for Voron Trident with KAMP adaptive mesh, line purge, and StealthBurner LEDs
gcode:
    # Fetch parameters from slicer
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default(40)|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # Initialize printer
    CLEAR_PAUSE                    # Clear any pause state
    G90                           # Set absolute positioning
    SET_DISPLAY_TEXT MSG="Homing" # Display homing message
    SET_LED LED=rgb_light RED=1 GREEN=1 BLUE=1  # Set rgb_light to white
    STATUS_HOMING                 # Set SB LEDs to homing mode
    G28                           # Home all axes (X, Y, Z)

    # Heat bed to target temperature
    SET_DISPLAY_TEXT MSG="Heating bed to {target_bed}C"
    STATUS_HEATING                # Set SB LEDs to heating mode
    M190 S{target_bed}            # Wait for bed to reach target temperature

    # Preheat extruder to 150°C for safe probing (e.g., for Tap)
    SET_DISPLAY_TEXT MSG="Preheating hotend to 150C"
    M109 S150                     # Wait for extruder to reach 150°C

    # Level the gantry (Trident-specific)
    SET_DISPLAY_TEXT MSG="Z-Tilt Adjust"
    STATUS_LEVELING               # Set SB LEDs to leveling mode
    Z_TILT_ADJUST                 # Perform Z-tilt adjustment
    G28 Z                         # Re-home Z after tilt adjustment

    # Perform adaptive bed mesh with KAMP
    SET_DISPLAY_TEXT MSG="Adaptive bed mesh"
    STATUS_MESHING                # Set SB LEDs to meshing mode
    BED_MESH_CLEAR                # Clear any existing mesh
    BED_MESH_CALIBRATE ADAPTIVE=1 # Perform KAMP adaptive mesh

    # Heat extruder to final print temperature
    SET_DISPLAY_TEXT MSG="Heating hotend to {target_extruder}C"
    STATUS_HEATING                # Set SB LEDs to heating mode
    G1 X{x_wait} Y{y_wait} Z15 F9000 # Move to center of bed
    M107                          # Turn off part cooling fan
    M109 S{target_extruder}       # Wait for extruder to reach target temp

    # Wait for chamber temperature (if applicable)
    {% if target_chamber > 40 %}
        SET_DISPLAY_TEXT MSG="Waiting for chamber to reach {target_chamber}C"
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={target_chamber}
    {% endif %}

    # Perform KAMP line purge
    SET_DISPLAY_TEXT MSG="Purging"
    STATUS_PRINTING               # Set SB LEDs to printing mode
    SETUP_KAMP_LINE_PURGE PURGE_LENGTH=20 # Optional: Adjust purge length (mm)
    LINE_PURGE                    # Execute KAMP line purge

    # Finalize setup
    SET_DISPLAY_TEXT MSG="Starting print"
    STATUS_PRINTING               # Ensure SB LEDs are in printing mode
    G90                           # Ensure absolute positioning
    G92 E0                        # Reset extruder
   

[gcode_macro PRINT_END]
description: End macro for Voron Trident with StealthBurner LEDs, RGB light to green, and cleanup
gcode:
    # Save current state
    SAVE_GCODE_STATE NAME=PRINT_END_STATE

    # Clear display and set LED status
    SET_DISPLAY_TEXT MSG="Print finished"
    STATUS_OFF                  # Set SB LEDs to off or idle mode

    # Turn off heaters and fan
    M104 S0                     # Turn off extruder heater
    M140 S0                     # Turn off bed heater
    M107                        # Turn off part cooling fan

    # Clear bed mesh
    BED_MESH_CLEAR              # Remove active bed mesh

    # Park toolhead safely
    G90                         # Set absolute positioning
    {% set z_safe = printer.toolhead.axis_maximum.z|float - 20 %}
    {% set x_park = printer.toolhead.axis_maximum.x|float - 50 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 50 %}
    G0 Z{z_safe} F9000          # Move Z to safe height
    G0 X{x_park} Y{y_park} F9000 # Park toolhead at back-center

    # Set RGB light to green
    SET_LED LED=rgb_light RED=0 GREEN=1 BLUE=0  # Set rgb_light to pure green

    # Reset printer state
    G92 E0                      # Reset extruder
    SET_GCODE_OFFSET Z=0        # Clear any Z offset
    SET_IDLE_TIMEOUT TIMEOUT=1800 # Set idle timeout to 30 minutes
    SET_DISPLAY_TEXT MSG="Ready"

    # Restore state
    RESTORE_GCODE_STATE NAME=PRINT_END_STATE

    # Final LED status
    STATUS_READY                # Set SB LEDs to ready/idle mode
    # Set RGB light to green
    SET_LED LED=rgb_light RED=0 GREEN=1 BLUE=0  # Set rgb_light to pure green

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 5.610
#*#
#*# [stepper_z]
#*# position_endstop = 0.519
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.007
#*# pid_ki = 3.650
#*# pid_kd = 185.276
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.908
#*# pid_ki = 2.768
#*# pid_kd = 56.043
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 72.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 48.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.277875, -0.280375, -0.269750
#*# 	  -0.287250, -0.290375, -0.285375
#*# 	  -0.291000, -0.290375, -0.287875
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 146.501
#*# max_x = 153.481
#*# min_y = 136.69
#*# max_y = 163.31
